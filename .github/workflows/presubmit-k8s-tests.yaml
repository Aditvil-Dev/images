on:
  pull_request:
    branches:
      - main
    types: [labeled]
jobs:
  presubmit-matrix-k8s:
    if: contains(github.event.pull_request.labels.*.name, 'k8s')
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
    - id: files
      uses: tj-actions/changed-files@7ecfc6730dff8072d1cc5215a24cc9478f55264d # v35.8.0
      with:
        separator: ','
    - id: generate-matrix
      uses: ./.github/actions/generate-matrix
      with:
        modified-files: ${{ steps.files.outputs.all_changed_files }}
        melange-mode: none
        test-tags: k8s
  presubmit-build-k8s:
    if: contains(github.event.pull_request.labels.*.name, 'k8s')
    runs-on: ubuntu-latest
    needs: presubmit-matrix-k8s
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.presubmit-matrix-k8s.outputs.matrix) }}
    steps:
      - uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.4.0
      - uses: chainguard-dev/actions/setup-kind@main
        with:
          k8s-version: v1.24.x
          registry-authority: registry.local:5000
      - run: |
          kubectl get pods --all-namespaces
      - name: Get registry IP address (for use inside docker)
        id: registry-ip
        run: |
          echo "ip=$(docker inspect registry.local | jq -r '.[0].NetworkSettings.Networks["bridge"].IPAddress')" >> $GITHUB_OUTPUT
      - uses: chainguard-images/actions/apko-publish@main
        with:
          config: ${{ matrix.apkoConfig }}
          tag: ${{ steps.registry-ip.outputs.ip }}:5000/${{ matrix.imageName }}:${{ matrix.apkoTargetTag }}
      - name: Run k8s tests
        run: |
          set -x
          export IMAGE_NAME="registry.local:5000/${{ matrix.imageName }}:${{ matrix.apkoTargetTag }}"
          export IMAGE_TAG_SUFFIX="${{ matrix.apkoTargetTagSuffix }}"
          cd "${{ matrix.testCommandDir }}"
          ${{ matrix.testCommandExe }}
  presubmit-roundup-k8s:
    runs-on: ubuntu-latest
    needs: presubmit-build-k8s
    steps:
      - run: |
          echo "all matrix jobs completed"
